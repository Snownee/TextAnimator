plugins {
    id 'fabric-loom' version '1.5.+'
    id 'maven-publish'
    id "me.shedaniel.unified-publishing" version "0.1.+"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.minecraft_version + "-fabric-" + project.mod_version
group = project.maven_group

repositories {
    maven {
        // Shedaniel's maven (Architectury API)
        url = "https://maven.architectury.dev"
        content {
            includeGroup "dev.architectury"
        }
    }
    maven {
        // saps.dev Maven (KubeJS and Rhino)
        url = "https://maven.saps.dev/minecraft"
        content {
            includeGroup "dev.latvian.mods"
        }
    }
    maven { url "https://maven.parchmentmc.org" }
    maven { url "https://maven.shedaniel.me/" }
    maven { url = "https://maven.blamejared.com/" }
    maven { url "https://maven.terraformersmc.com/releases/" }
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }

    maven { url = "https://maven.teamresourceful.com/repository/maven-public/" }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:${project.rei_version}"
//    modImplementation "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"

    //modImplementation "mezz.jei:jei-${minecraft_version}-fabric:${jei_version}"

    //modImplementation "dev.emi:emi:${emi_version}"

//    modImplementation "curse.maven:kiwi-549404:4400668"
//    annotationProcessor "curse.maven:kiwi-549404:4400668"

//    modImplementation("dev.architectury:architectury-fabric:${project.architectury_version}")
//    modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
//        exclude(group: "net.fabricmc.fabric-api")
//    }
//    modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"

    //modImplementation "dev.latvian.mods:kubejs-fabric:1902.6.0-build.119"
//	modImplementation "curse.maven:ftb-quests-fabric-438496:4600396"
//	modImplementation "curse.maven:ftb-library-fabric-438495:4541986"
//	modImplementation "curse.maven:item-filters-309674:4553325"
//	modImplementation "curse.maven:ftb-teams-fabric-438497:4611937"
//	modApi("teamreborn:energy:2.2.0") {
//		exclude(group: "net.fabricmc.fabric-api")
//	}

    modImplementation "earth.terrarium.heracles:heracles-fabric-1.20.1:1.1.9"
}

loom {
    accessWidenerPath = file("src/main/resources/${project.mod_id}.accesswidener")
    mixin {
        defaultRefmapName = "${project.mod_id}.refmap.json"
    }
}

processResources {
    inputs.property "version", project.mod_version

    filesMatching("fabric.mod.json") {
        expand "version": project.mod_version
    }
}

tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"

    // Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
    it.options.release = 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    // withSourcesJar()
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            // artifact(sourcesJar) {
            //     builtBy remapSourcesJar
            // }
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}

unifiedPublishing {
    project {
        displayName = "[Fabric $project.supported_version] $project.mod_version"
        version = project.mod_version // Optional, Inferred from project by default
        changelog = file("CHANGELOG.md").exists() ? file("CHANGELOG.md").text : "" // Optional, in markdown format
        releaseType = project.release_type // Optional, use "release", "beta" or "alpha"
        gameVersions = ["1.20", "1.20.1"]
        gameLoaders = ["fabric", "quilt"]

        mainPublication tasks.remapJar // Declares the publicated jar

        var cfToken = System.getenv("CURSE_TOKEN")
        if (cfToken != null) {
            curseforge {
                token = cfToken
                id = "881778" // Required, must be a string, ID of CurseForge project

                relations { // Optional, Inferred from the relations above by default
                }
            }
        }

        var mrToken = System.getenv("MODRINTH_TOKEN")
        if (mrToken != null) {
            modrinth {
                token = mrToken
                id = "HBIG5nRf" // Required, must be a string, ID of Modrinth project

                relations { // Optional, Inferred from the relations above by default
                }
            }
        }
    }
}
